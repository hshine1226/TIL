(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{381:function(t,e,s){"use strict";s.r(e);var a=s(25),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"bem-block-element-modifier-방법론"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bem-block-element-modifier-방법론"}},[t._v("#")]),t._v(" BEM(Block Element Modifier) 방법론")]),t._v(" "),s("p",[t._v("CSS 개발 방법론 중 BEM 방법론을 알아보자.")]),t._v(" "),s("p",[t._v("BEM 방법론은 문제의 요소에 대한 속성에 근거하는 클래스의 이름을 짓는데 구조적인 방법을 제시한다.")]),t._v(" "),s("p",[t._v("BEM 방법론은 ID에는 사용할 수 없고, 오직 Class에만 사용 가능하다.")]),t._v(" "),s("h2",{attrs:{id:"block-전체를-감싸고-있는-블럭요소"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#block-전체를-감싸고-있는-블럭요소"}},[t._v("#")]),t._v(" Block(전체를 감싸고 있는 블럭요소)")]),t._v(" "),s("p",[s("code",[t._v("블럭(block)")]),t._v("은 문단 전체에 적용된 요소 또는 요소를 담고 있는 컨테이너를 말한다.")]),t._v(" "),s("p",[t._v("Header, Footer, Side-bar, Main-content 영역을 가지고 있다면, 이 각각의 영역들이 블럭으로 간주되는 것이다.")]),t._v(" "),s("p",[t._v("아래의 그림을 참고하자.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.htmlgoodies.com/imagesvr_ce/1828/stylingblocks.png",alt:"Block",title:"Block 이미지"}})]),t._v(" "),s("p",[t._v("블럭 요소는 클래스의 "),s("strong",[t._v("어근")]),t._v("을 형성하고 "),s("strong",[t._v("항상 맨 앞")]),t._v("에 위치한다.")]),t._v(" "),s("p",[t._v("일단 블럭을 정의하면, 블럭이 형성한 클래스의 어근을 맨 앞에 붙여 그 블럭이 포함하는 요소들의 클래스명을 짓기 시작하면 되는 것이다.")]),t._v(" "),s("h2",{attrs:{id:"element"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#element"}},[t._v("#")]),t._v(" Element")]),t._v(" "),s("p",[s("code",[t._v("요소(element)")]),t._v("는 블럭이 포함하고 있는 한 조각이다.")]),t._v(" "),s("p",[t._v("블럭은 전체를 말하고, 요소들은 그 조각을 일컫고, 각 요소는 두개의 밑줄표시로 연결하여 블럭 다음에 위치 시킨다.")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".block__element")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("두개의 밑줄 표시는 시각적으로 쉽게 그리고 빨리 코드를 찾고 조작할 수 있도록 도와준다.")]),t._v(" "),s("h2",{attrs:{id:"modifiers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modifiers"}},[t._v("#")]),t._v(" Modifiers")]),t._v(" "),s("p",[s("code",[t._v("modifier")]),t._v("는 블럭 또는 요소의 속성이다. 이 속성은 블럭 또는 요소의 외관이나 상태를 변화시키는 것이다.")]),t._v(" "),s("p",[t._v("클래스명을 지을 때의 목적은 그 요소를 반복하여 재사용할 수 있게 하기 위한 것이기 때문에, 요소의 스타일이 같은 것이라면 사이트의 다른 영역이라 할지라도 새로운 클래스를 정의하지 않아도 된다.")]),t._v(" "),s("p",[t._v("Modifier는 두개의 하이픈('--')을 추가하여 표시한다.")]),t._v(" "),s("p",[t._v("간단한 예는 다음과 같다.")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".block__element--modifier")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"장점"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#장점"}},[t._v("#")]),t._v(" 장점")]),t._v(" "),s("ul",[s("li",[t._v("Class Name의 중복을 방지한다.")]),t._v(" "),s("li",[t._v("직관적이다.")]),t._v(" "),s("li",[t._v("전체 DOM Tree 구조를 다시 보지 않아도 된다.")])])])}),[],!1,null,null,null);e.default=r.exports}}]);