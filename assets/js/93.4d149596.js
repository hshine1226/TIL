(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{454:function(t,s,n){"use strict";n.r(s);var a=n(25),o=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"mongodb-연결하기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-연결하기"}},[t._v("#")]),t._v(" MongoDB 연결하기")]),t._v(" "),n("h2",{attrs:{id:"dotenv-설치하기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dotenv-설치하기"}},[t._v("#")]),t._v(" dotenv 설치하기")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" dotenv\n")])])]),n("p",[t._v("dotenv를 설치하는 이유는 가끔 내가 어떤 부분을 숨기고 싶을 때 시용하기 위함이다.")]),t._v(" "),n("p",[t._v("지금은 localhost에 MongoDB가 설치되어 있지만 만약 Cloud와 같은 외부에 설치가 되어있다면, 내 코드에 있는 URL로부터 유저 데이터를 보는 것을 원하지 않을 것이다.")]),t._v(" "),n("p",[t._v("따라서 이럴 때 데이터를 숨기기 위해서 dotenv를 사용하는 것이다.")]),t._v(" "),n("h2",{attrs:{id:"mongoose로-mongodb-연결하기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongoose로-mongodb-연결하기"}},[t._v("#")]),t._v(" Mongoose로 MongoDB 연결하기")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// db.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" mongoose "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mongoose"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MongoDB port: 27017(Mongod실행 후 확인)")]),t._v("\nmongoose"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mongodb://localhost:27017/youtube-clone"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  useNewUrlParser"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  useFindAndModify"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" db "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mongoose"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleOpen")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"✅ connected to DB"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleError")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("❌ Error on DB Connection:")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ndb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("once")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"open"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handleOpen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handleError"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),n("h3",{attrs:{id:"import-mongoose"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#import-mongoose"}},[t._v("#")]),t._v(" import mongoose")]),t._v(" "),n("p",[t._v("일단 mongoDB를 연결하기 위해서는 mongoose를 import해준다.")]),t._v(" "),n("p",[t._v("그리고 mongoose를 통해서 MongoDB를 연결하려면 Mongoose는 아래와 같은 String으로 된 database 주소를 요청한다.")]),t._v(" "),n("p",[n("code",[t._v("mongodb://localhost:PORT_NUMBER/DATABASE_NAME")])]),t._v(" "),n("p",[t._v("여기서 PORT_NUMBER는 Terminal에서 "),n("code",[t._v("mongod")]),t._v("를 통해서 확인 가능하다.")]),t._v(" "),n("p",[t._v("DATABASE_NAME은 원하는 이름을 정해주면 된다.")]),t._v(" "),n("h3",{attrs:{id:"configuration-설정"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuration-설정"}},[t._v("#")]),t._v(" Configuration 설정")]),t._v(" "),n("p",[t._v("그리고 추가로 새로운 버전의 Mongoose는 Configuration(useNewUrlParser, useFindAndModify)을 보낼 수 있다.")]),t._v(" "),n("p",[t._v("이것들은 이렇게 적어놓는 이유는 내가 MongoDB를 사용할 때마다 이 Configuration을 설정하는 것이다.")]),t._v(" "),n("p",[t._v("새 버전에서는 이것들이 기본으로 설정되어 있지만, 이렇게 적어줌으로서 더 확실하게 하기 위함이다.")]),t._v(" "),n("p",[t._v("너무 크게 신경쓰지 말자!")]),t._v(" "),n("h3",{attrs:{id:"import-database"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#import-database"}},[t._v("#")]),t._v(" Import Database")]),t._v(" "),n("p",[t._v("그리고 위에서 연결한 MongoDB와의 Connection을 db라는 변수에 저장한다.")]),t._v(" "),n("p",[t._v("mongoose.connection.SOMTHING 이런식으로 사용해도 되지만 코드가 지저분하기 때문에 db라는 변수에 저장할 것이다.")]),t._v(" "),n("p",[n("code",[t._v('db.once("open", LISTENER)')]),t._v("는 MongoDB가 한 번만 실행되게 하는 것이다.")]),t._v(" "),n("p",[n("code",[t._v('db.on("error", LISTENER)')]),t._v("는 에러가 발생하면 해당 에러를 반환하는 것이다.")]),t._v(" "),n("p",[t._v("그리고 이전에 videoController.js에서 db를 import 했던 것을 없애고, init.js에서 import 해줄 것이다. 아래와 같이 db 전체를 import해준다.")]),t._v(" "),n("p",[t._v("그리고 NodeJS를 실행을 해보면 DB가 정상적으로 연결된 것을 확인할 수 있다.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// init.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./db"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=o.exports}}]);