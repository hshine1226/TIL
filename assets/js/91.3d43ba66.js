(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{452:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"웹팩-webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#웹팩-webpack"}},[s._v("#")]),s._v(" 웹팩(Webpack)")]),s._v(" "),a("p",[s._v("웹 서비스 개발에서 JavaScript로 작성하는 코드의 양이 늘어나면서 코드의 유지보수가 쉽도록 코드를 모듈로 나누어 관리하는 모듈 시스템이 필요해졌다.")]),s._v(" "),a("p",[s._v("그러나 JavaScript 언어 자체가 지원하는 모듈 시스템이 없다. 따라서 이런 한계를 극복하기 위해 웹팩(Webpack)이라는 도구를 활용한다.")]),s._v(" "),a("p",[s._v("웹팩(Webpack)은 오픈 소스 JavaScript 모듈 번들러이다. 주로 JavaScript를 위한 모듈 번들러 이지만 호환 플러그인을 포함하는 경우 HTML, CSS, 심지어는 이미지와 같은 프론트엔드 자산들을 변환할 수 있다.")]),s._v(" "),a("p",[s._v("웹팩은 의존성이 있는 모듈을 취하여 해당 모듈을 대표하는 정적 자산들을 생성한다.")]),s._v(" "),a("p",[s._v("웹팩은 의존성을 취한 다음 의존성 그래프를 만듦으로서 웹 개발자들이 웹 애플리케이션 개발 목적을 위해 모듈 방식의 접근을 사용할 수 있게 도와준다.")]),s._v(" "),a("p",[s._v("명령줄을 통해서 사용 가능하며, "),a("code",[s._v("webpack.config.js")]),s._v("라는 이름의 구성 파일을 사용하여 구성할 수 있다. 이 파일을 사용하면 프로젝트를 위해 로더, 플러그인 등을 정의할 수 있다.")]),s._v(" "),a("p",[s._v("웹팩 설치에는 Node.js가 요구된다.")]),s._v(" "),a("p",[s._v("webpack은 모듈 번들러이다. 우리가 많은 파일들을 가져와서 webpack에게 넘겨주면, webpack은 그것들을 완전히 호환 가능한 static 파일로 변환하는 기능을 한다.")]),s._v(" "),a("p",[s._v("예를들면 우리는 지금 ES6 JavaScript와 Sass를 사용한다. 그리고 우리는 이것들을 webpack안에 집어넣을거고, 그것들을 webpack이 일반적인 css와 nomal JavaScript로 변환해서 브라우저가 알아들을 수 있도록 해줄 것이다.")]),s._v(" "),a("h2",{attrs:{id:"웹팩-webpack-사용-방법"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#웹팩-webpack-사용-방법"}},[s._v("#")]),s._v(" 웹팩(Webpack) 사용 방법")]),s._v(" "),a("p",[s._v("webpack은 Node.js가 설치된 환경에서 실행된다. Node.js를 사용하는 환경에서 webpack을 설치하고 모듈을 컴파일 하는 방법은 다음과 같다.")]),s._v(" "),a("h3",{attrs:{id:"설치와-컴파일"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#설치와-컴파일"}},[s._v("#")]),s._v(" 설치와 컴파일")]),s._v(" "),a("p",[s._v("webpack은 다음과 같이 npm 명령어로 설치할 수 있다.")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" webpack webpack-cli\n")])])]),a("p",[a("code",[s._v("webpack")]),s._v("은 파일에서 webpack을 사용하기 위함이고, "),a("code",[s._v("webpack-cli")]),s._v("는 터미널에서 webpack을 사용하게 해주는 것이다.")]),s._v(" "),a("h3",{attrs:{id:"설정-파일"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#설정-파일"}},[s._v("#")]),s._v(" 설정 파일")]),s._v(" "),a("p",[s._v("설치가 완료되면 "),a("code",[s._v("webpack.config.js")]),s._v("파일을 생성하자.")]),s._v(" "),a("p",[s._v("그리고 현재 프로젝트 폴더의 "),a("code",[s._v("packge.json")]),s._v(" 파일에서 Scripts를 변경해주자.")]),s._v(" "),a("p",[s._v("이제 node를 실행할 때, "),a("code",[s._v("npm start")]),s._v("를 사용하지 않고, "),a("code",[s._v("npm run dev:server")]),s._v("와 "),a("code",[s._v("npm run dev:assets")]),s._v("로 각자의 콘솔에서 실행할 것이다. 아래와 같이 Scripts를 변경하자.")]),s._v(" "),a("p",[a("code",[s._v('"start": "nodemon --exec babel-node init.js"')]),s._v(" → "),a("code",[s._v('"dev:server": "nodemon --exec babel-node init.js"')])]),s._v(" "),a("p",[a("code",[s._v('"dev:assets": "webpack"')])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dev:server"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nodemon --exec babel-node init.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dev:assets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"WEBPACK_ENV=development webpack"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 내 코드를 server에 올려준다.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build:assets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"WEBPACK_ENV=production webpack"')]),s._v("\n")])])]),a("p",[s._v("누군가 "),a("code",[s._v("npm run dev:assets")]),s._v("를 입력하면 webpack을 불러오고, 자동적으로 "),a("code",[s._v("webpack.config.js")]),s._v(" 파일을 찾을 것이다. 따라서 이 파일의 이름은 변경하면 안된다.")]),s._v(" "),a("p",[s._v("기본적인 규칙은 webpack이 exported configuration object를 찾는 다는 것이다.")]),s._v(" "),a("p",[s._v("한가지 명심해야 할 점은 이 config 파일은 server 코드와는 연관시키지 않고 오직 client code와만 연관되어야 한다는 것이다. 즉, 우리가 앞에서 사용한 babel-node는 아직 사용할 수가 없다. 따라서 우리는 예전의 JavaScript를 사용해야 한다.")]),s._v(" "),a("p",[s._v("일단 설정파일("),a("code",[s._v("webpack.config.js")]),s._v(")을 구성해보자.")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// webpack.config.js")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Node.js에는 path를 통해서 파일과 경로를 절대적으로 만들어 줄 수 있다.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// path는 Node.js에 기본적으로 깔려있는 패키지이다.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" autoprefixer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"autoprefixer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" ExtractCSS "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extract-text-webpack-plugin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MODE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("WEBPACK_ENV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// __dirname은 현재의 프로젝트 디렉토리 이름이다. 이 변수는 어디서든 접근 가능한 Node.js의 전역 변수이다. 따라서 선언하지 않고 바로 가져다 쓰면 된다.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ENTRY_FILE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"assets"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// OUTPUT_DIR은 저장되는 파일의 위치를 만들어 줄 것이다.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 파일이 아닌 디렉토리이므로 path.join을 사용해서 static이라는 폴더로 export 하라고 지정한다.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("OUTPUT_DIR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"static"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  entry"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ENTRY_FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  module"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 이곳에서 우리가 사용할 모든 파일 형식들을 지정한다.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// webpack이 module을 만났을 때, 아래의 규칙들을 따르게 하는 것이다.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// rules는 하나의 array로 선언 가능하다.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 어떤 확장자를 만날 때, 어떤 loader를 실행해라와 같은 명령을 주는 것이다.")]),s._v("\n    rules"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// test를 통해서 어떤 파일인지 알아본다.")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 정규표현식을 통해 아래와 같이 지정했다. ")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 아래는 scss인 파일을 전부 찾아주는 코드이다.")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SCSS 파일 찾기 → SCSS를 CSS로 바꾸기 → CSS에서 전체 텍스트 추출하기 → 추출된 CSS를 분리된 하나의 파일로 만들기")]),s._v("\n        test"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\.(scss)$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SCSS 파일을 찾았을 때 Extract Text Webpack이라는 플러그인을 사용한다.")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// loader를 사용할 때는 아래에서부터 위로 코드가 실행된다.")]),s._v("\n        use"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExtractCSS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("extract")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// css-loader를 이용해서 webpack이 CSS를 이해할 수 있게 되는 것이다.")]),s._v("\n            loader"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"css-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// postcss-loader는 CSS의 호환성 관련된 것들을 자동으로 해결해준다.")]),s._v("\n            loader"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"postcss-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            options"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// PostCSS 플러그인으로 autoprefixer를 사용한다.")]),s._v("\n              "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("plugins")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("autoprefixer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" browsers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cover 99.5%"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sass-loader는 Sass or SCSS를 받아서 일반 CSS로 바꿔준다.")]),s._v("\n            loader"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sass-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// output은 Object로 지정해야한다.")]),s._v("\n  output"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("OUTPUT_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[name].js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// plugins을 사용하기 위해서는 아래와 같이 plugins를 설치해주어야 한다.")]),s._v("\n  plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExtractCSS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"styles.css"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 예전 버전의 JavaScript 문법을 사용해서 export 해준다.")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("웹팩은 "),a("code",[s._v("Entry")]),s._v(", "),a("code",[s._v("Output")]),s._v("을 가지고 있다.")]),s._v(" "),a("p",[a("code",[s._v("Entry")]),s._v("는 파일들이 어디에서 왔는지를 나타내고, "),a("code",[s._v("output")]),s._v('은 그것들을 어디에 넣을 것인지에 관한 것이다. 일단 "assets"라는 폴더를 생성하자. 이 폴더 안에는 js폴더, scss폴더를 생성한다. 우리는 이 폴더 안에 JavaScript와 SCSS 작업을 할 것이다.')]),s._v(" "),a("p",[s._v("폴더 구조는 다음과 같다.")]),s._v(" "),a("blockquote",[a("p",[s._v("assets/js/main.js")]),s._v(" "),a("p",[s._v("assets/scss/styles.scss")]),s._v(" "),a("p",[s._v("assets/scss/config/_variables.scss")])]),s._v(" "),a("p",[a("code",[s._v("main.js")]),s._v(" 파일에서는 Modern JavaScript를 이용해서 scss 파일을 import 해준다.")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// assets/js/main.js")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"../scss/styles.scss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"extract-text-webpack-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extract-text-webpack-plugin"}},[s._v("#")]),s._v(" extract-text-webpack-plugin")]),s._v(" "),a("p",[s._v("아래와 같은 명령어로 extract-text-webpack-plugin을 설치할 수 있다.")]),s._v(" "),a("p",[s._v("이때 마지막에 "),a("code",[s._v("@")]),s._v("를 붙여서 설치하게 되면 아직 공개하지 않은 Beta 버전을 설치할 수 있다.(최신버전)")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" extract-text-webpack-plugin@\n")])])]),a("h3",{attrs:{id:"loader-설치"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loader-설치"}},[s._v("#")]),s._v(" loader 설치")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" css-loader postcss-loader sass-loader\n")])])]),a("h3",{attrs:{id:"node-sass-설치"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-sass-설치"}},[s._v("#")]),s._v(" node-sass 설치")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" node-sass\n")])])]),a("h2",{attrs:{id:"postcss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postcss"}},[s._v("#")]),s._v(" PostCSS")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://postcss.org",target:"_blank",rel:"noopener noreferrer"}},[s._v("PostCSS"),a("OutboundLink")],1),s._v("의 Autoprefixer라는 도구를 사용하면 현재 사용하는 브라우저의 인기도를 바탕으로 prefix들을 알아서 적용시킨다. 이와같이 굉장히 많은 플러그인들을 PostCSS를 통해 사용할 수 있다.")]),s._v(" "),a("p",[s._v("우리는 Autoprefixer를 사용할 것이다.")]),s._v(" "),a("h3",{attrs:{id:"autoprefixer-설치"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#autoprefixer-설치"}},[s._v("#")]),s._v(" autoprefixer 설치")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" autoprefixer\n")])])]),a("h3",{attrs:{id:"option"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#option"}},[s._v("#")]),s._v(" Option")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/postcss/autoprefixer",target:"_blank",rel:"noopener noreferrer"}},[s._v("autoprefixer"),a("OutboundLink")],1),s._v("는 넣어줘야하는 몇가지 옵션이 있다.")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("loader"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"postcss-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\noptions"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// PostCSS 플러그인으로 autoprefixer를 사용한다.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// plugins는 plugin들로 구성된 array이다.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("plugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 지금은 하나의 plugin만 있기 때문에 아래와 같이 plugin을 return해준다.")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// option으로는 conver 99.5%를 사용한다. 이 옵션은 시중의 브라우저에 99.5%와 호환 가능하게 해주는 옵션이다.")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("autoprefixer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" browsers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cover 99.5%"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])]),a("h2",{attrs:{id:"es6-with-webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-with-webpack"}},[s._v("#")]),s._v(" ES6 with Webpack")]),s._v(" "),a("p",[s._v("Webpack을 통해 ES6를 사용해 볼 것이다. 아래와 같이 ES6 문법을 작성한다.")]),s._v(" "),a("div",{staticClass:"language-JS extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// assets/js/main.js")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"../scss/styles.scss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("something")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"something"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("그리고 이것을 Webpack에서 modern JavaScript로 바꾸어 주어야 한다. 아래와 같이 새로운 rule을 하나 추가한다.")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// webpack.config.js")]),s._v("\nrules"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        test"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\.(js)$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        use"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            loader"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"babel-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])]),a("p",[s._v("여기서 사용하는 loader는 "),a("code",[s._v("babel-loader")]),s._v("이다.")]),s._v(" "),a("h3",{attrs:{id:"babel-loader-설치"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-loader-설치"}},[s._v("#")]),s._v(" babel-loader 설치")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" babel-loader\n")])])]),a("h3",{attrs:{id:"scripts-수정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scripts-수정"}},[s._v("#")]),s._v(" Scripts 수정")]),s._v(" "),a("p",[s._v("그리고 스크립트에서 -w 옵션을 추가해서 "),a("code",[s._v("dev:assets")]),s._v("가 파일들을 지켜보게 할 것이다.")]),s._v(" "),a("p",[s._v("watch를 추가해주면 css를 수정할 때마다 webpack을 재시작하는 귀찮은 일을 하지 않아도 된다.")]),s._v(" "),a("p",[s._v("하지만 config.js 파일을 수정 했을 때는 재시작 해줘야 한다.")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// package.json")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"dev:server"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nodemon --exec babel-node init.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 아래와 같이 마지막에 -w를 추가하면 된다.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"dev:assets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"WEBPACK_ENV=development webpack -w"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build:assets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"WEBPACK_ENV=production webpack"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])]),a("h3",{attrs:{id:"view-수정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#view-수정"}},[s._v("#")]),s._v(" View  수정")]),s._v(" "),a("p",[s._v("아래와 같이 css와 script 파일을 추가해준다.")]),s._v(" "),a("div",{staticClass:"language-pug extra-class"},[a("pre",{pre:!0,attrs:{class:"language-pug"}},[a("code",[a("span",{pre:!0,attrs:{class:"token doctype"}},[s._v("doctype html")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[s._v("html")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[s._v("head")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[s._v("script"),a("span",{pre:!0,attrs:{class:"token attributes"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://kit.fontawesome.com/142b9259dc.js"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("crossorigin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"anonymous"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[s._v("title")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("#{pageTitle} #{siteName}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// static폴더의 styles.css를 추가해준다.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[s._v("link"),a("span",{pre:!0,attrs:{class:"token attributes"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("rel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stylesheet"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("href")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"static/styles.css"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[s._v("body")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include ../partials/header")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[s._v("main")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("block content")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include ../partials/footer")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// script도 추가해준다.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[s._v("script"),a("span",{pre:!0,attrs:{class:"token attributes"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/static/main.js"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n")])])]),a("h3",{attrs:{id:"app-js-수정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#app-js-수정"}},[s._v("#")]),s._v(" app.js 수정")]),s._v(" "),a("p",[s._v("그리고 우리는 서버에게 알려줘야 한다. 왜냐하면 우리는 지금 "),a("code",[s._v("/static")]),s._v("이라는 route가 존재하지 않기 때문에 app.js 파일에서 추가시켜줘야 한다.")]),s._v(" "),a("p",[s._v("아래와 같이 누군가 "),a("code",[s._v("/static")]),s._v("으로 가려고 하면, static 폴더로 가라고 지정해준다.")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// app.js")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/uploads"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" express"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("static")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"uploads"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 아래와 같이 static route를 추가해주어야 한다.")]),s._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/static"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" express"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("static")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"static"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n")])])]),a("h3",{attrs:{id:"polyfill-설치"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#polyfill-설치"}},[s._v("#")]),s._v(" polyfill 설치")]),s._v(" "),a("p",[a("code",[s._v("npm run dev:server")]),s._v(", "),a("code",[s._v("npm run dev:assets")]),s._v("를 통해 실행해보면 콘솔 창에 "),a("code",[s._v("regeneratorRuuntime")]),s._v("이 정의되지 않았다고 오류가 뜬다. 이것은 브라우저가 async를 어떻게 처리해야 하는지 모르기 때문이다.")]),s._v(" "),a("p",[s._v("따라서 우리는 polifill이라는 것을 설치해주어야 한다. 우리는 "),a("code",[s._v("babel-polyfill")]),s._v("을 설치할 것이다.")]),s._v(" "),a("p",[s._v("polyfill은 브라우저가 없는 부분을 메워주는 자바스크립트 파일 같은 것이다.")]),s._v(" "),a("h4",{attrs:{id:"설치법"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#설치법"}},[s._v("#")]),s._v(" 설치법")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" @babel/polyfill\n")])])]),a("h4",{attrs:{id:"webpack-config-js-수정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-config-js-수정"}},[s._v("#")]),s._v(" webpack.config.js 수정")]),s._v(" "),a("p",[s._v("entry를 array로 만든 다음 "),a("code",[s._v("@babel/polyfill")]),s._v("을 추가한다.")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  entry"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@babel/polyfill"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ENTRY_FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n")])])]),a("h2",{attrs:{id:"ignore-nodemon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ignore-nodemon"}},[s._v("#")]),s._v(" Ignore Nodemon")]),s._v(" "),a("p",[s._v("매번 CSS를 저장할 때 마다 Server를 재시작하는게 비효율적이다.")]),s._v(" "),a("p",[s._v("그래서 우리는 nodemon을 ignore 시킬 것이다.")]),s._v(" "),a("p",[s._v("Nodemon을 무시하는 방법은 아래와 같이 "),a("code",[s._v("--ignore 'scss'")]),s._v("를 추가한다.")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// package.json")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dev:server"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"nodemon --exec babel-node init.js --ignore 'scss'\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);