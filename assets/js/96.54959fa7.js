(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{456:function(e,r,o){"use strict";o.r(r);var t=o(25),n=Object(t.a)({},(function(){var e=this,r=e.$createElement,o=e._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"mongodb-errors"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-errors"}},[e._v("#")]),e._v(" MongoDB Errors")]),e._v(" "),o("h2",{attrs:{id:"mongoerror-e11000-duplicate-key-error-index"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#mongoerror-e11000-duplicate-key-error-index"}},[e._v("#")]),e._v(" MongoError: E11000 duplicate key error index ...")]),e._v(" "),o("p",[e._v("해당 에러는 unique 값으로 지정된 키의 중복으로 인해서 발생하는 에러이다.")]),e._v(" "),o("p",[e._v("이 에러를 해결하기 위해서는 MongoDB에서 중복된 키 값들을 삭제해줘야 하는데, 현재 Index key의 확인은 다음의 명령어 "),o("code",[e._v("db.collection.getIndexes()")]),e._v("로 확인이 가능하다.")]),e._v(" "),o("p",[e._v("명령어를 확인해서 중복된 키 값이 어떤 키인지 확인한 후, 삭제하고 싶은 키는 다음의 명령어"),o("code",[e._v('db.toilets.dropIndex(index) - e.g. db.toilets.dropIndex( "indexName" ) or db.toilets.dropIndex( { "indexKey" : 1 } )')]),e._v("로 삭제가 가능하다.")]),e._v(" "),o("p",[e._v("만약 인덱스를 전체 다 삭제하고 싶다면, "),o("code",[e._v("db.collection.dropIndexes()")]),e._v("를 사용하면 된다.")])])}),[],!1,null,null,null);r.default=n.exports}}]);