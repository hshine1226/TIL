(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{438:function(t,s,e){"use strict";e.r(s);var a=e(25),i=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"깃허브-사용법"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#깃허브-사용법"}},[t._v("#")]),t._v(" 깃허브 사용법")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" README.md\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first commit"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin 레퍼지토리주소\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master\n")])])]),e("h2",{attrs:{id:"git-clone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-clone"}},[t._v("#")]),t._v(" git clone")]),t._v(" "),e("p",[e("code",[t._v("git clone")]),t._v("은 클라이언트 상에 아무것도 없을 때 서버의 프로젝트를 내려받는 명령어입니다.")]),t._v(" "),e("p",[e("code",[t._v("git clone [저장소 주소]")]),t._v("와 같이 명령어를 입력하면 됩니다.")]),t._v(" "),e("h2",{attrs:{id:"git-remote"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-remote"}},[t._v("#")]),t._v(" git remote")]),t._v(" "),e("p",[t._v("git remote는 원격 저장소를 관리할 수 있는 명령어입니다.")]),t._v(" "),e("p",[e("code",[t._v("git remote add origin 레퍼지토리주소")]),t._v("와 같이 명령어를 사용하면 origin이라는 이름으로 원격 저장소 주소를 등록하는 것입니다.")]),t._v(" "),e("p",[t._v("이 때 "),e("code",[t._v("origin")]),t._v("은 임의로 변경할 수 있습니다.")]),t._v(" "),e("p",[t._v("만약, origin이라는 원격 저장소를 지우고 싶다면 "),e("code",[t._v("git remote remove origin")]),t._v("이라고 하면 됩니다.")]),t._v(" "),e("h2",{attrs:{id:"git-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[t._v("#")]),t._v(" git commit")]),t._v(" "),e("p",[e("code",[t._v('git commit -m "Message"')]),t._v(" 명령어로 커밋을 작성할 수 있습니다.")]),t._v(" "),e("h2",{attrs:{id:"git-push"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-push"}},[t._v("#")]),t._v(" git push")]),t._v(" "),e("p",[t._v("작성한 커밋을 원격 저장소에 저장하기 위해서는 "),e("code",[t._v("git push")]),t._v(" 명령어를 사용합니다.")]),t._v(" "),e("p",[e("code",[t._v("git push origin master")]),t._v("와 같이 명령어를 입력해주면, origin 원격 저장소에 커밋을 push 해줍니다.")]),t._v(" "),e("p",[t._v("여기서 master는 현재 사용하는 컴퓨터의 브랜치 이름입니다.")]),t._v(" "),e("h2",{attrs:{id:"git-pull"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-pull"}},[t._v("#")]),t._v(" git pull")]),t._v(" "),e("p",[e("code",[t._v("git pull")]),t._v(" 명령어는 다른 사람이 PR을 통해서 코드를 업데이트 했거나, Commit을 했을 때 그 변경 내용을 클라이언트로 내려받는 명령어입니다.")]),t._v(" "),e("p",[e("code",[t._v("git pull origin master")]),t._v("와 같이 명령어를 작성하면 origin 원격 저장소의 내용이 master로 복사됩니다.")])])}),[],!1,null,null,null);s.default=i.exports}}]);