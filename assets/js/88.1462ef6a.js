(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{448:function(t,a,n){"use strict";n.r(a);var e=n(25),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"optional-chaining"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#optional-chaining"}},[t._v("#")]),t._v(" Optional Chaining (?.)")]),t._v(" "),n("p",[t._v("Javascript에서 객체에 접근할 때, 만약 Property가 없다면 에러가 발생할 수 있다.")]),t._v(" "),n("p",[t._v("하지만 Optional Chaining을 사용하면 Property가 없는 객체에도 안전하게 접근할 수 있다.")]),t._v(" "),n("p",[t._v("Optional Chaining을 사용하기 전에는 이런 문제들을 해결하기 위해서 "),n("code",[t._v("&&")]),t._v("연산자를 시용해서 해당 객체에 Property가 있는지 확인했었다.")]),t._v(" "),n("p",[t._v("하지만 AND 연산자를 이용해서 이 문제를 해결하다 보니 코드가 아주 길어진다는 단점이 있었다.")]),t._v(" "),n("p",[t._v("코드를 효율적으로 깔끔하게 사용하기 위해서는 "),n("code",[t._v("Optional Chaining")]),t._v("을 사용해보자.")]),t._v(" "),n("h2",{attrs:{id:"사용법"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#사용법"}},[t._v("#")]),t._v(" 사용법")]),t._v(" "),n("p",[n("code",[t._v("?.")]),t._v("은 평가하고 싶은 Property의 앞의 대상이 "),n("code",[t._v("undefined")]),t._v(", "),n("code",[t._v("null")]),t._v("이면 평가를 멈추고 "),n("code",[t._v("undefined")]),t._v("를 반환한다.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?.")]),t._v("address"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?.")]),t._v("street"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined 에러 발생 X")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);